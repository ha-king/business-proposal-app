{
 "Resources": {
  "BusinessProposalProdUserPool8EBF4256": {
   "Type": "AWS::Cognito::UserPool",
   "Properties": {
    "AccountRecoverySetting": {
     "RecoveryMechanisms": [
      {
       "Name": "verified_phone_number",
       "Priority": 1
      },
      {
       "Name": "verified_email",
       "Priority": 2
      }
     ]
    },
    "AdminCreateUserConfig": {
     "AllowAdminCreateUserOnly": true
    },
    "EmailVerificationMessage": "The verification code to your new account is {####}",
    "EmailVerificationSubject": "Verify your new account",
    "SmsVerificationMessage": "The verification code to your new account is {####}",
    "VerificationMessageTemplate": {
     "DefaultEmailOption": "CONFIRM_WITH_CODE",
     "EmailMessage": "The verification code to your new account is {####}",
     "EmailSubject": "Verify your new account",
     "SmsMessage": "The verification code to your new account is {####}"
    }
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "BusinessProposalStack/BusinessProposalProdUserPool/Resource"
   }
  },
  "BusinessProposalProdUserPoolClientEA46CA45": {
   "Type": "AWS::Cognito::UserPoolClient",
   "Properties": {
    "AllowedOAuthFlows": [
     "implicit",
     "code"
    ],
    "AllowedOAuthFlowsUserPoolClient": true,
    "AllowedOAuthScopes": [
     "profile",
     "phone",
     "email",
     "openid",
     "aws.cognito.signin.user.admin"
    ],
    "CallbackURLs": [
     "https://example.com"
    ],
    "GenerateSecret": true,
    "SupportedIdentityProviders": [
     "COGNITO"
    ],
    "UserPoolId": {
     "Ref": "BusinessProposalProdUserPool8EBF4256"
    }
   },
   "Metadata": {
    "aws:cdk:path": "BusinessProposalStack/BusinessProposalProdUserPoolClient/Resource"
   }
  },
  "BusinessProposalProdUserPoolClientDescribeCognitoUserPoolClientAF01F94A": {
   "Type": "Custom::DescribeCognitoUserPoolClient",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "AWS679f53fac002430cb0da5b7982bd22872D164C4C",
      "Arn"
     ]
    },
    "Create": {
     "Fn::Join": [
      "",
      [
       "{\"region\":\"",
       {
        "Ref": "AWS::Region"
       },
       "\",\"service\":\"CognitoIdentityServiceProvider\",\"action\":\"describeUserPoolClient\",\"parameters\":{\"UserPoolId\":\"",
       {
        "Ref": "BusinessProposalProdUserPool8EBF4256"
       },
       "\",\"ClientId\":\"",
       {
        "Ref": "BusinessProposalProdUserPoolClientEA46CA45"
       },
       "\"},\"physicalResourceId\":{\"id\":\"",
       {
        "Ref": "BusinessProposalProdUserPoolClientEA46CA45"
       },
       "\"}}"
      ]
     ]
    },
    "Update": {
     "Fn::Join": [
      "",
      [
       "{\"region\":\"",
       {
        "Ref": "AWS::Region"
       },
       "\",\"service\":\"CognitoIdentityServiceProvider\",\"action\":\"describeUserPoolClient\",\"parameters\":{\"UserPoolId\":\"",
       {
        "Ref": "BusinessProposalProdUserPool8EBF4256"
       },
       "\",\"ClientId\":\"",
       {
        "Ref": "BusinessProposalProdUserPoolClientEA46CA45"
       },
       "\"},\"physicalResourceId\":{\"id\":\"",
       {
        "Ref": "BusinessProposalProdUserPoolClientEA46CA45"
       },
       "\"}}"
      ]
     ]
    },
    "InstallLatestAwsSdk": false
   },
   "DependsOn": [
    "BusinessProposalProdUserPoolClientDescribeCognitoUserPoolClientCustomResourcePolicy789A84CD"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "BusinessProposalStack/BusinessProposalProdUserPoolClient/DescribeCognitoUserPoolClient/Resource/Default"
   }
  },
  "BusinessProposalProdUserPoolClientDescribeCognitoUserPoolClientCustomResourcePolicy789A84CD": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "cognito-idp:DescribeUserPoolClient",
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "BusinessProposalProdUserPool8EBF4256",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "BusinessProposalProdUserPoolClientDescribeCognitoUserPoolClientCustomResourcePolicy789A84CD",
    "Roles": [
     {
      "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "BusinessProposalStack/BusinessProposalProdUserPoolClient/DescribeCognitoUserPoolClient/CustomResourcePolicy/Resource"
   }
  },
  "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "BusinessProposalStack/AWS679f53fac002430cb0da5b7982bd2287/ServiceRole/Resource"
   }
  },
  "AWS679f53fac002430cb0da5b7982bd22872D164C4C": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "17c16a3854838fd3ff4bda08146122a6701f33b9c86ae17f415ad0dc47a97544.zip"
    },
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Timeout": 120
   },
   "DependsOn": [
    "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2"
   ],
   "Metadata": {
    "aws:cdk:path": "BusinessProposalStack/AWS679f53fac002430cb0da5b7982bd2287/Resource",
    "aws:asset:path": "asset.17c16a3854838fd3ff4bda08146122a6701f33b9c86ae17f415ad0dc47a97544",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "BusinessProposalProdParamCognitoSecret9BD35E93": {
   "Type": "AWS::SecretsManager::Secret",
   "Properties": {
    "Name": "BusinessProposalParamCognitoSecret12345-prod",
    "SecretString": {
     "Fn::Join": [
      "",
      [
       "{\"pool_id\":\"",
       {
        "Ref": "BusinessProposalProdUserPool8EBF4256"
       },
       "\",\"app_client_id\":\"",
       {
        "Ref": "BusinessProposalProdUserPoolClientEA46CA45"
       },
       "\",\"app_client_secret\":\"",
       {
        "Fn::GetAtt": [
         "BusinessProposalProdUserPoolClientDescribeCognitoUserPoolClientAF01F94A",
         "UserPoolClient.ClientSecret"
        ]
       },
       "\"}"
      ]
     ]
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "BusinessProposalStack/BusinessProposalProdParamCognitoSecret/Resource"
   }
  },
  "BusinessProposalProdAppVpc498D487D": {
   "Type": "AWS::EC2::VPC",
   "Properties": {
    "CidrBlock": "10.0.0.0/16",
    "EnableDnsHostnames": true,
    "EnableDnsSupport": true,
    "InstanceTenancy": "default",
    "Tags": [
     {
      "Key": "Name",
      "Value": "BusinessProposalStack/BusinessProposalProdAppVpc"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "BusinessProposalStack/BusinessProposalProdAppVpc/Resource"
   }
  },
  "BusinessProposalProdAppVpcPublicSubnet1Subnet98ECF40E": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      0,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.0.0/18",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Public"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "BusinessProposalStack/BusinessProposalProdAppVpc/PublicSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "BusinessProposalProdAppVpc498D487D"
    }
   },
   "Metadata": {
    "aws:cdk:path": "BusinessProposalStack/BusinessProposalProdAppVpc/PublicSubnet1/Subnet"
   }
  },
  "BusinessProposalProdAppVpcPublicSubnet1RouteTableD9190811": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "BusinessProposalStack/BusinessProposalProdAppVpc/PublicSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "BusinessProposalProdAppVpc498D487D"
    }
   },
   "Metadata": {
    "aws:cdk:path": "BusinessProposalStack/BusinessProposalProdAppVpc/PublicSubnet1/RouteTable"
   }
  },
  "BusinessProposalProdAppVpcPublicSubnet1RouteTableAssociationF8253A69": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "BusinessProposalProdAppVpcPublicSubnet1RouteTableD9190811"
    },
    "SubnetId": {
     "Ref": "BusinessProposalProdAppVpcPublicSubnet1Subnet98ECF40E"
    }
   },
   "Metadata": {
    "aws:cdk:path": "BusinessProposalStack/BusinessProposalProdAppVpc/PublicSubnet1/RouteTableAssociation"
   }
  },
  "BusinessProposalProdAppVpcPublicSubnet1DefaultRoute3E55A1C2": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "BusinessProposalProdAppVpcIGWBA25ACD1"
    },
    "RouteTableId": {
     "Ref": "BusinessProposalProdAppVpcPublicSubnet1RouteTableD9190811"
    }
   },
   "DependsOn": [
    "BusinessProposalProdAppVpcVPCGW2536CF47"
   ],
   "Metadata": {
    "aws:cdk:path": "BusinessProposalStack/BusinessProposalProdAppVpc/PublicSubnet1/DefaultRoute"
   }
  },
  "BusinessProposalProdAppVpcPublicSubnet1EIP6E66C53F": {
   "Type": "AWS::EC2::EIP",
   "Properties": {
    "Domain": "vpc",
    "Tags": [
     {
      "Key": "Name",
      "Value": "BusinessProposalStack/BusinessProposalProdAppVpc/PublicSubnet1"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "BusinessProposalStack/BusinessProposalProdAppVpc/PublicSubnet1/EIP"
   }
  },
  "BusinessProposalProdAppVpcPublicSubnet1NATGateway8EFFA9E6": {
   "Type": "AWS::EC2::NatGateway",
   "Properties": {
    "AllocationId": {
     "Fn::GetAtt": [
      "BusinessProposalProdAppVpcPublicSubnet1EIP6E66C53F",
      "AllocationId"
     ]
    },
    "SubnetId": {
     "Ref": "BusinessProposalProdAppVpcPublicSubnet1Subnet98ECF40E"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "BusinessProposalStack/BusinessProposalProdAppVpc/PublicSubnet1"
     }
    ]
   },
   "DependsOn": [
    "BusinessProposalProdAppVpcPublicSubnet1DefaultRoute3E55A1C2",
    "BusinessProposalProdAppVpcPublicSubnet1RouteTableAssociationF8253A69"
   ],
   "Metadata": {
    "aws:cdk:path": "BusinessProposalStack/BusinessProposalProdAppVpc/PublicSubnet1/NATGateway"
   }
  },
  "BusinessProposalProdAppVpcPublicSubnet2SubnetA5A67AF4": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      1,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.64.0/18",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Public"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "BusinessProposalStack/BusinessProposalProdAppVpc/PublicSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "BusinessProposalProdAppVpc498D487D"
    }
   },
   "Metadata": {
    "aws:cdk:path": "BusinessProposalStack/BusinessProposalProdAppVpc/PublicSubnet2/Subnet"
   }
  },
  "BusinessProposalProdAppVpcPublicSubnet2RouteTable59DBF793": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "BusinessProposalStack/BusinessProposalProdAppVpc/PublicSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "BusinessProposalProdAppVpc498D487D"
    }
   },
   "Metadata": {
    "aws:cdk:path": "BusinessProposalStack/BusinessProposalProdAppVpc/PublicSubnet2/RouteTable"
   }
  },
  "BusinessProposalProdAppVpcPublicSubnet2RouteTableAssociation70510720": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "BusinessProposalProdAppVpcPublicSubnet2RouteTable59DBF793"
    },
    "SubnetId": {
     "Ref": "BusinessProposalProdAppVpcPublicSubnet2SubnetA5A67AF4"
    }
   },
   "Metadata": {
    "aws:cdk:path": "BusinessProposalStack/BusinessProposalProdAppVpc/PublicSubnet2/RouteTableAssociation"
   }
  },
  "BusinessProposalProdAppVpcPublicSubnet2DefaultRouteF63C81E4": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "BusinessProposalProdAppVpcIGWBA25ACD1"
    },
    "RouteTableId": {
     "Ref": "BusinessProposalProdAppVpcPublicSubnet2RouteTable59DBF793"
    }
   },
   "DependsOn": [
    "BusinessProposalProdAppVpcVPCGW2536CF47"
   ],
   "Metadata": {
    "aws:cdk:path": "BusinessProposalStack/BusinessProposalProdAppVpc/PublicSubnet2/DefaultRoute"
   }
  },
  "BusinessProposalProdAppVpcPrivateSubnet1Subnet21FE5CCB": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      0,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.128.0/18",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Private"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Private"
     },
     {
      "Key": "Name",
      "Value": "BusinessProposalStack/BusinessProposalProdAppVpc/PrivateSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "BusinessProposalProdAppVpc498D487D"
    }
   },
   "Metadata": {
    "aws:cdk:path": "BusinessProposalStack/BusinessProposalProdAppVpc/PrivateSubnet1/Subnet"
   }
  },
  "BusinessProposalProdAppVpcPrivateSubnet1RouteTableDFF7FE57": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "BusinessProposalStack/BusinessProposalProdAppVpc/PrivateSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "BusinessProposalProdAppVpc498D487D"
    }
   },
   "Metadata": {
    "aws:cdk:path": "BusinessProposalStack/BusinessProposalProdAppVpc/PrivateSubnet1/RouteTable"
   }
  },
  "BusinessProposalProdAppVpcPrivateSubnet1RouteTableAssociation2BF09937": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "BusinessProposalProdAppVpcPrivateSubnet1RouteTableDFF7FE57"
    },
    "SubnetId": {
     "Ref": "BusinessProposalProdAppVpcPrivateSubnet1Subnet21FE5CCB"
    }
   },
   "Metadata": {
    "aws:cdk:path": "BusinessProposalStack/BusinessProposalProdAppVpc/PrivateSubnet1/RouteTableAssociation"
   }
  },
  "BusinessProposalProdAppVpcPrivateSubnet1DefaultRouteDC15FAE8": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "NatGatewayId": {
     "Ref": "BusinessProposalProdAppVpcPublicSubnet1NATGateway8EFFA9E6"
    },
    "RouteTableId": {
     "Ref": "BusinessProposalProdAppVpcPrivateSubnet1RouteTableDFF7FE57"
    }
   },
   "Metadata": {
    "aws:cdk:path": "BusinessProposalStack/BusinessProposalProdAppVpc/PrivateSubnet1/DefaultRoute"
   }
  },
  "BusinessProposalProdAppVpcPrivateSubnet2SubnetB3777B5E": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      1,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.192.0/18",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Private"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Private"
     },
     {
      "Key": "Name",
      "Value": "BusinessProposalStack/BusinessProposalProdAppVpc/PrivateSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "BusinessProposalProdAppVpc498D487D"
    }
   },
   "Metadata": {
    "aws:cdk:path": "BusinessProposalStack/BusinessProposalProdAppVpc/PrivateSubnet2/Subnet"
   }
  },
  "BusinessProposalProdAppVpcPrivateSubnet2RouteTableE3C18691": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "BusinessProposalStack/BusinessProposalProdAppVpc/PrivateSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "BusinessProposalProdAppVpc498D487D"
    }
   },
   "Metadata": {
    "aws:cdk:path": "BusinessProposalStack/BusinessProposalProdAppVpc/PrivateSubnet2/RouteTable"
   }
  },
  "BusinessProposalProdAppVpcPrivateSubnet2RouteTableAssociationADE95AD9": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "BusinessProposalProdAppVpcPrivateSubnet2RouteTableE3C18691"
    },
    "SubnetId": {
     "Ref": "BusinessProposalProdAppVpcPrivateSubnet2SubnetB3777B5E"
    }
   },
   "Metadata": {
    "aws:cdk:path": "BusinessProposalStack/BusinessProposalProdAppVpc/PrivateSubnet2/RouteTableAssociation"
   }
  },
  "BusinessProposalProdAppVpcPrivateSubnet2DefaultRoute29806C56": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "NatGatewayId": {
     "Ref": "BusinessProposalProdAppVpcPublicSubnet1NATGateway8EFFA9E6"
    },
    "RouteTableId": {
     "Ref": "BusinessProposalProdAppVpcPrivateSubnet2RouteTableE3C18691"
    }
   },
   "Metadata": {
    "aws:cdk:path": "BusinessProposalStack/BusinessProposalProdAppVpc/PrivateSubnet2/DefaultRoute"
   }
  },
  "BusinessProposalProdAppVpcIGWBA25ACD1": {
   "Type": "AWS::EC2::InternetGateway",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "BusinessProposalStack/BusinessProposalProdAppVpc"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "BusinessProposalStack/BusinessProposalProdAppVpc/IGW"
   }
  },
  "BusinessProposalProdAppVpcVPCGW2536CF47": {
   "Type": "AWS::EC2::VPCGatewayAttachment",
   "Properties": {
    "InternetGatewayId": {
     "Ref": "BusinessProposalProdAppVpcIGWBA25ACD1"
    },
    "VpcId": {
     "Ref": "BusinessProposalProdAppVpc498D487D"
    }
   },
   "Metadata": {
    "aws:cdk:path": "BusinessProposalStack/BusinessProposalProdAppVpc/VPCGW"
   }
  },
  "BusinessProposalProdSecurityGroupECS2793D30F": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "BusinessProposalStack/BusinessProposalProdSecurityGroupECS",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "VpcId": {
     "Ref": "BusinessProposalProdAppVpc498D487D"
    }
   },
   "Metadata": {
    "aws:cdk:path": "BusinessProposalStack/BusinessProposalProdSecurityGroupECS/Resource"
   }
  },
  "BusinessProposalProdSecurityGroupECSfromBusinessProposalStackBusinessProposalProdSecurityGroupALBAEF5EAAE85012731FC69": {
   "Type": "AWS::EC2::SecurityGroupIngress",
   "Properties": {
    "Description": "from BusinessProposalStackBusinessProposalProdSecurityGroupALBAEF5EAAE:8501",
    "FromPort": 8501,
    "GroupId": {
     "Fn::GetAtt": [
      "BusinessProposalProdSecurityGroupECS2793D30F",
      "GroupId"
     ]
    },
    "IpProtocol": "tcp",
    "SourceSecurityGroupId": {
     "Fn::GetAtt": [
      "BusinessProposalProdSecurityGroupALB8AE88121",
      "GroupId"
     ]
    },
    "ToPort": 8501
   },
   "Metadata": {
    "aws:cdk:path": "BusinessProposalStack/BusinessProposalProdSecurityGroupECS/from BusinessProposalStackBusinessProposalProdSecurityGroupALBAEF5EAAE:8501"
   }
  },
  "BusinessProposalProdSecurityGroupALB8AE88121": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "BusinessProposalStack/BusinessProposalProdSecurityGroupALB",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "SecurityGroupIngress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow from anyone on port 80",
      "FromPort": 80,
      "IpProtocol": "tcp",
      "ToPort": 80
     }
    ],
    "VpcId": {
     "Ref": "BusinessProposalProdAppVpc498D487D"
    }
   },
   "Metadata": {
    "aws:cdk:path": "BusinessProposalStack/BusinessProposalProdSecurityGroupALB/Resource"
   }
  },
  "BusinessProposalProdECRRepo30B4F726": {
   "Type": "AWS::ECR::Repository",
   "Properties": {
    "RepositoryName": "businessproposal-app"
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "BusinessProposalStack/BusinessProposalProdECRRepo/Resource"
   }
  },
  "BusinessProposalProdCluster85DD0A56": {
   "Type": "AWS::ECS::Cluster",
   "Metadata": {
    "aws:cdk:path": "BusinessProposalStack/BusinessProposalProdCluster/Resource"
   }
  },
  "BusinessProposalProdClusterC1EAA331": {
   "Type": "AWS::ECS::ClusterCapacityProviderAssociations",
   "Properties": {
    "CapacityProviders": [
     "FARGATE",
     "FARGATE_SPOT"
    ],
    "Cluster": {
     "Ref": "BusinessProposalProdCluster85DD0A56"
    },
    "DefaultCapacityProviderStrategy": []
   },
   "Metadata": {
    "aws:cdk:path": "BusinessProposalStack/BusinessProposalProdCluster/BusinessProposalProdCluster"
   }
  },
  "BusinessProposalProdAlbAD2EA0CB": {
   "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
   "Properties": {
    "LoadBalancerAttributes": [
     {
      "Key": "deletion_protection.enabled",
      "Value": "false"
     }
    ],
    "Scheme": "internet-facing",
    "SecurityGroups": [
     {
      "Fn::GetAtt": [
       "BusinessProposalProdSecurityGroupALB8AE88121",
       "GroupId"
      ]
     }
    ],
    "Subnets": [
     {
      "Ref": "BusinessProposalProdAppVpcPublicSubnet1Subnet98ECF40E"
     },
     {
      "Ref": "BusinessProposalProdAppVpcPublicSubnet2SubnetA5A67AF4"
     }
    ],
    "Type": "application"
   },
   "DependsOn": [
    "BusinessProposalProdAppVpcPublicSubnet1DefaultRoute3E55A1C2",
    "BusinessProposalProdAppVpcPublicSubnet1RouteTableAssociationF8253A69",
    "BusinessProposalProdAppVpcPublicSubnet2DefaultRouteF63C81E4",
    "BusinessProposalProdAppVpcPublicSubnet2RouteTableAssociation70510720"
   ],
   "Metadata": {
    "aws:cdk:path": "BusinessProposalStack/BusinessProposalProdAlb/Resource"
   }
  },
  "BusinessProposalProdAlbBusinessProposalProdListenerB38B9517": {
   "Type": "AWS::ElasticLoadBalancingV2::Listener",
   "Properties": {
    "DefaultActions": [
     {
      "FixedResponseConfig": {
       "ContentType": "text/plain",
       "MessageBody": "Access denied",
       "StatusCode": "403"
      },
      "Type": "fixed-response"
     }
    ],
    "LoadBalancerArn": {
     "Ref": "BusinessProposalProdAlbAD2EA0CB"
    },
    "Port": 80,
    "Protocol": "HTTP"
   },
   "Metadata": {
    "aws:cdk:path": "BusinessProposalStack/BusinessProposalProdAlb/BusinessProposalProdListener/Resource"
   }
  },
  "BusinessProposalProdAlbBusinessProposalProdListenerBusinessProposalProdTargetsGroupD8752E4B": {
   "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
   "Properties": {
    "Port": 8501,
    "Protocol": "HTTP",
    "TargetGroupAttributes": [
     {
      "Key": "stickiness.enabled",
      "Value": "false"
     }
    ],
    "TargetType": "ip",
    "VpcId": {
     "Ref": "BusinessProposalProdAppVpc498D487D"
    }
   },
   "Metadata": {
    "aws:cdk:path": "BusinessProposalStack/BusinessProposalProdAlb/BusinessProposalProdListener/BusinessProposalProdTargetsGroup/Resource"
   }
  },
  "BusinessProposalProdAlbBusinessProposalProdListenerBusinessProposalProdTargetsRuleC152E4E2": {
   "Type": "AWS::ElasticLoadBalancingV2::ListenerRule",
   "Properties": {
    "Actions": [
     {
      "TargetGroupArn": {
       "Ref": "BusinessProposalProdAlbBusinessProposalProdListenerBusinessProposalProdTargetsGroupD8752E4B"
      },
      "Type": "forward"
     }
    ],
    "Conditions": [
     {
      "Field": "http-header",
      "HttpHeaderConfig": {
       "HttpHeaderName": "X-Custom-Header",
       "Values": [
        "Bp_random_value_58dsv15e4s31"
       ]
      }
     }
    ],
    "ListenerArn": {
     "Ref": "BusinessProposalProdAlbBusinessProposalProdListenerB38B9517"
    },
    "Priority": 1
   },
   "Metadata": {
    "aws:cdk:path": "BusinessProposalStack/BusinessProposalProdAlb/BusinessProposalProdListener/BusinessProposalProdTargetsRule/Resource"
   }
  },
  "BusinessProposalProdTaskDefTaskRole0D62FD87": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "ecs-tasks.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "BusinessProposalStack/BusinessProposalProdTaskDef/TaskRole/Resource"
   }
  },
  "BusinessProposalProdTaskDefTaskRoleDefaultPolicy2D742710": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "secretsmanager:GetSecretValue",
        "secretsmanager:DescribeSecret"
       ],
       "Effect": "Allow",
       "Resource": {
        "Ref": "BusinessProposalProdParamCognitoSecret9BD35E93"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "BusinessProposalProdTaskDefTaskRoleDefaultPolicy2D742710",
    "Roles": [
     {
      "Ref": "BusinessProposalProdTaskDefTaskRole0D62FD87"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "BusinessProposalStack/BusinessProposalProdTaskDef/TaskRole/DefaultPolicy/Resource"
   }
  },
  "BusinessProposalProdTaskDef7143AE5D": {
   "Type": "AWS::ECS::TaskDefinition",
   "Properties": {
    "ContainerDefinitions": [
     {
      "Environment": [
       {
        "Name": "ENVIRONMENT",
        "Value": "prod"
       }
      ],
      "Essential": true,
      "Image": "streamlit/streamlit:latest",
      "LogConfiguration": {
       "LogDriver": "awslogs",
       "Options": {
        "awslogs-group": {
         "Ref": "BusinessProposalProdTaskDefBusinessProposalProdContainerLogGroupD9D0C21B"
        },
        "awslogs-stream-prefix": "BusinessProposal",
        "awslogs-region": {
         "Ref": "AWS::Region"
        }
       }
      },
      "Name": "BusinessProposalProdContainer",
      "PortMappings": [
       {
        "ContainerPort": 8501,
        "Protocol": "tcp"
       }
      ]
     }
    ],
    "Cpu": "1024",
    "ExecutionRoleArn": {
     "Fn::GetAtt": [
      "BusinessProposalProdTaskDefExecutionRole72E0D58C",
      "Arn"
     ]
    },
    "Family": "BusinessProposalStackBusinessProposalProdTaskDef4FADFCAC",
    "Memory": "2048",
    "NetworkMode": "awsvpc",
    "RequiresCompatibilities": [
     "FARGATE"
    ],
    "TaskRoleArn": {
     "Fn::GetAtt": [
      "BusinessProposalProdTaskDefTaskRole0D62FD87",
      "Arn"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "BusinessProposalStack/BusinessProposalProdTaskDef/Resource"
   }
  },
  "BusinessProposalProdTaskDefBusinessProposalProdContainerLogGroupD9D0C21B": {
   "Type": "AWS::Logs::LogGroup",
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "BusinessProposalStack/BusinessProposalProdTaskDef/BusinessProposalProdContainer/LogGroup/Resource"
   }
  },
  "BusinessProposalProdTaskDefExecutionRole72E0D58C": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "ecs-tasks.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "BusinessProposalStack/BusinessProposalProdTaskDef/ExecutionRole/Resource"
   }
  },
  "BusinessProposalProdTaskDefExecutionRoleDefaultPolicy1AB3E7E5": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "logs:CreateLogStream",
        "logs:PutLogEvents"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "BusinessProposalProdTaskDefBusinessProposalProdContainerLogGroupD9D0C21B",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "BusinessProposalProdTaskDefExecutionRoleDefaultPolicy1AB3E7E5",
    "Roles": [
     {
      "Ref": "BusinessProposalProdTaskDefExecutionRole72E0D58C"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "BusinessProposalStack/BusinessProposalProdTaskDef/ExecutionRole/DefaultPolicy/Resource"
   }
  },
  "BusinessProposalProdService7AB6E1F4": {
   "Type": "AWS::ECS::Service",
   "Properties": {
    "Cluster": {
     "Ref": "BusinessProposalProdCluster85DD0A56"
    },
    "DeploymentConfiguration": {
     "Alarms": {
      "AlarmNames": [],
      "Enable": false,
      "Rollback": false
     },
     "MaximumPercent": 200,
     "MinimumHealthyPercent": 50
    },
    "EnableECSManagedTags": false,
    "HealthCheckGracePeriodSeconds": 60,
    "LaunchType": "FARGATE",
    "LoadBalancers": [
     {
      "ContainerName": "BusinessProposalProdContainer",
      "ContainerPort": 8501,
      "TargetGroupArn": {
       "Ref": "BusinessProposalProdAlbBusinessProposalProdListenerBusinessProposalProdTargetsGroupD8752E4B"
      }
     }
    ],
    "NetworkConfiguration": {
     "AwsvpcConfiguration": {
      "AssignPublicIp": "DISABLED",
      "SecurityGroups": [
       {
        "Fn::GetAtt": [
         "BusinessProposalProdSecurityGroupECS2793D30F",
         "GroupId"
        ]
       }
      ],
      "Subnets": [
       {
        "Ref": "BusinessProposalProdAppVpcPrivateSubnet1Subnet21FE5CCB"
       },
       {
        "Ref": "BusinessProposalProdAppVpcPrivateSubnet2SubnetB3777B5E"
       }
      ]
     }
    },
    "TaskDefinition": {
     "Ref": "BusinessProposalProdTaskDef7143AE5D"
    }
   },
   "DependsOn": [
    "BusinessProposalProdAlbBusinessProposalProdListenerBusinessProposalProdTargetsRuleC152E4E2",
    "BusinessProposalProdTaskDefTaskRoleDefaultPolicy2D742710",
    "BusinessProposalProdTaskDefTaskRole0D62FD87"
   ],
   "Metadata": {
    "aws:cdk:path": "BusinessProposalStack/BusinessProposalProdService/Service"
   }
  },
  "BusinessProposalProdBedrockPolicy549232E9": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "bedrock:InvokeModel",
        "bedrock:InvokeModelWithResponseStream"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "BusinessProposalProdBedrockPolicy549232E9",
    "Roles": [
     {
      "Ref": "BusinessProposalProdTaskDefTaskRole0D62FD87"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "BusinessProposalStack/BusinessProposalProdBedrockPolicy/Resource"
   }
  },
  "BusinessProposalProdDistribution3B138C62": {
   "Type": "AWS::CloudFront::Distribution",
   "Properties": {
    "DistributionConfig": {
     "DefaultCacheBehavior": {
      "AllowedMethods": [
       "GET",
       "HEAD",
       "OPTIONS",
       "PUT",
       "PATCH",
       "POST",
       "DELETE"
      ],
      "CachePolicyId": "4135ea2d-6df8-44a3-9df3-4b5a84be39ad",
      "Compress": true,
      "TargetOriginId": "BusinessProposalStackBusinessProposalProdDistributionOrigin1E0D79C6D",
      "ViewerProtocolPolicy": "redirect-to-https"
     },
     "Enabled": true,
     "HttpVersion": "http2",
     "IPV6Enabled": true,
     "Origins": [
      {
       "CustomOriginConfig": {
        "OriginProtocolPolicy": "https-only",
        "OriginSSLProtocols": [
         "TLSv1.2"
        ]
       },
       "DomainName": {
        "Fn::GetAtt": [
         "BusinessProposalProdAlbAD2EA0CB",
         "DNSName"
        ]
       },
       "Id": "BusinessProposalStackBusinessProposalProdDistributionOrigin1E0D79C6D",
       "OriginCustomHeaders": [
        {
         "HeaderName": "X-Custom-Header",
         "HeaderValue": "Bp_random_value_58dsv15e4s31"
        }
       ]
      }
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "BusinessProposalStack/BusinessProposalProdDistribution/Resource"
   }
  },
  "BusinessProposalProdBuildRole1FA561A9": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "codebuild.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "BusinessProposalStack/BusinessProposalProdBuild/Role/Resource"
   }
  },
  "BusinessProposalProdBuildRoleDefaultPolicy8811E6D1": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "logs:CreateLogGroup",
        "logs:CreateLogStream",
        "logs:PutLogEvents"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":logs:",
           {
            "Ref": "AWS::Region"
           },
           ":",
           {
            "Ref": "AWS::AccountId"
           },
           ":log-group:/aws/codebuild/",
           {
            "Ref": "BusinessProposalProdBuild70C5505A"
           }
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":logs:",
           {
            "Ref": "AWS::Region"
           },
           ":",
           {
            "Ref": "AWS::AccountId"
           },
           ":log-group:/aws/codebuild/",
           {
            "Ref": "BusinessProposalProdBuild70C5505A"
           },
           ":*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "codebuild:CreateReportGroup",
        "codebuild:CreateReport",
        "codebuild:UpdateReport",
        "codebuild:BatchPutTestCases",
        "codebuild:BatchPutCodeCoverages"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":codebuild:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":report-group/",
          {
           "Ref": "BusinessProposalProdBuild70C5505A"
          },
          "-*"
         ]
        ]
       }
      },
      {
       "Action": [
        "ecr:*",
        "ecs:*"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "BusinessProposalProdBuildRoleDefaultPolicy8811E6D1",
    "Roles": [
     {
      "Ref": "BusinessProposalProdBuildRole1FA561A9"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "BusinessProposalStack/BusinessProposalProdBuild/Role/DefaultPolicy/Resource"
   }
  },
  "BusinessProposalProdBuild70C5505A": {
   "Type": "AWS::CodeBuild::Project",
   "Properties": {
    "Artifacts": {
     "Type": "NO_ARTIFACTS"
    },
    "Cache": {
     "Type": "NO_CACHE"
    },
    "EncryptionKey": "alias/aws/s3",
    "Environment": {
     "ComputeType": "BUILD_GENERAL1_SMALL",
     "EnvironmentVariables": [
      {
       "Name": "AWS_ACCOUNT_ID",
       "Type": "PLAINTEXT",
       "Value": {
        "Ref": "AWS::AccountId"
       }
      },
      {
       "Name": "IMAGE_REPO_NAME",
       "Type": "PLAINTEXT",
       "Value": {
        "Ref": "BusinessProposalProdECRRepo30B4F726"
       }
      },
      {
       "Name": "IMAGE_TAG",
       "Type": "PLAINTEXT",
       "Value": "latest"
      },
      {
       "Name": "CLUSTER_NAME",
       "Type": "PLAINTEXT",
       "Value": {
        "Ref": "BusinessProposalProdCluster85DD0A56"
       }
      },
      {
       "Name": "SERVICE_NAME",
       "Type": "PLAINTEXT",
       "Value": {
        "Fn::GetAtt": [
         "BusinessProposalProdService7AB6E1F4",
         "Name"
        ]
       }
      }
     ],
     "Image": "aws/codebuild/standard:7.0",
     "ImagePullCredentialsType": "CODEBUILD",
     "PrivilegedMode": true,
     "Type": "LINUX_CONTAINER"
    },
    "ServiceRole": {
     "Fn::GetAtt": [
      "BusinessProposalProdBuildRole1FA561A9",
      "Arn"
     ]
    },
    "Source": {
     "BuildSpec": "{\n  \"version\": \"0.2\",\n  \"phases\": {\n    \"pre_build\": {\n      \"commands\": [\n        \"aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com\"\n      ]\n    },\n    \"build\": {\n      \"commands\": [\n        \"docker build -t $IMAGE_REPO_NAME:$IMAGE_TAG .\",\n        \"docker tag $IMAGE_REPO_NAME:$IMAGE_TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG\"\n      ]\n    },\n    \"post_build\": {\n      \"commands\": [\n        \"docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG\",\n        \"aws ecs update-service --cluster $CLUSTER_NAME --service $SERVICE_NAME --force-new-deployment\"\n      ]\n    }\n  }\n}",
     "Location": "https://github.com/ha-king/business-proposal-app.git",
     "ReportBuildStatus": true,
     "Type": "GITHUB"
    },
    "Triggers": {
     "Webhook": true
    }
   },
   "Metadata": {
    "aws:cdk:path": "BusinessProposalStack/BusinessProposalProdBuild/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/31TzW7bMAx+lt5VLU2fIHXXokCxGXHXa0HLjMtGkQyRShAIfvdBtuN63bATvx+KFGl5rW9WK726ghNfm2Z/banWqRIwewUnfkvGt47E6/SLMZTeW1Xs3IwvoLCETpbWqPTKwqFuQKeKXGtRvHuIzgh5p2ZQ7GaxVwQHnUpvyZyzMaGtt5hpjr3i2zdgRmG9yUHxrb6LZo9yB4yK0QQUPoCDFoNO1cDz6RH1Cs1ap9fOZO21LFQZa0umirWb8ma09VHwBeqx+6h/ahtmbwguQwxGBt+fyhx+gDyC4AnOqgx0BMHPwk9OMDicE8abTGwjAub9kDdaoYmB5PwYfOymGf4jPLk2IHMeMei0xc4ziQ9D/U+WbdapsJEFQ/b+hgV0YEjOZfBHajAsZmX1AKGFvATe3+OOHF1W8FXxToAchoU2na0wHMmMax1hr9ACCxnroanBgjPk2uNap03XWTJD72cPzd3gjbf9gy/ziAXdlHPBC/8FQosyL3FJ/1FlG8cHsOS9sr5lnZ59O5e54F4Z62OzC96JTvfEEqiOlyUtea+Mb7COZBudyuA/0AzvY4J9r0xk8Ye3gOxjMMh6c+Ji0LaTpL7S/K0nPIPhT6kEWnJtzvgZpYtDq8K7hsa7lGd59+7brb5Z6Zv11QcTXYfohA6ot2P8DZFZfAIwBAAA"
   },
   "Metadata": {
    "aws:cdk:path": "BusinessProposalStack/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Outputs": {
  "CloudFrontURL": {
   "Value": {
    "Fn::GetAtt": [
     "BusinessProposalProdDistribution3B138C62",
     "DomainName"
    ]
   }
  },
  "CognitoPoolId": {
   "Value": {
    "Ref": "BusinessProposalProdUserPool8EBF4256"
   }
  },
  "ECRRepository": {
   "Value": {
    "Fn::Join": [
     "",
     [
      {
       "Fn::Select": [
        4,
        {
         "Fn::Split": [
          ":",
          {
           "Fn::GetAtt": [
            "BusinessProposalProdECRRepo30B4F726",
            "Arn"
           ]
          }
         ]
        }
       ]
      },
      ".dkr.ecr.",
      {
       "Fn::Select": [
        3,
        {
         "Fn::Split": [
          ":",
          {
           "Fn::GetAtt": [
            "BusinessProposalProdECRRepo30B4F726",
            "Arn"
           ]
          }
         ]
        }
       ]
      },
      ".",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "BusinessProposalProdECRRepo30B4F726"
      }
     ]
    ]
   }
  },
  "ClusterName": {
   "Value": {
    "Ref": "BusinessProposalProdCluster85DD0A56"
   }
  },
  "ServiceName": {
   "Value": {
    "Fn::GetAtt": [
     "BusinessProposalProdService7AB6E1F4",
     "Name"
    ]
   }
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-2"
       ]
      }
     ]
    }
   ]
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}